// Jenkinsfile-CD (function-style for master pipeline)
def runCD() {
    environment {
        NODE_IP = "172.31.35.221"
        EC2_NAME = "ec2-user"
        PIPELINE_NAME = "CI-PIPELINE"
        PROJECT_NAME = "DevopsProject1"
    }

    stage("1. Pull Files") {
        sshagent(['my_ec2_creds']) {
            sh "scp -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/${PIPELINE_NAME}/${PROJECT_NAME}/deployment.yaml ${EC2_NAME}@${NODE_IP}:/home/ec2-user/"
            sh "scp -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/${PIPELINE_NAME}/${PROJECT_NAME}/service.yaml ${EC2_NAME}@${NODE_IP}:/home/ec2-user/"
        }
    }

    stage('2. Approval') {
        input message: 'Approve deployment to Kubernetes?'
    }

    stage("3. Deployment") {
        sshagent(['my_ec2_creds']) {
            sh "ssh -o StrictHostKeyChecking=no ${EC2_NAME}@${NODE_IP} kubectl apply -f /home/ec2-user/deployment.yaml"
            sh "ssh -o StrictHostKeyChecking=no ${EC2_NAME}@${NODE_IP} kubectl apply -f /home/ec2-user/service.yaml"
            sh "ssh -o StrictHostKeyChecking=no ${EC2_NAME}@${NODE_IP} kubectl rollout restart deploy"
            sh "ssh -o StrictHostKeyChecking=no ${EC2_NAME}@${NODE_IP} kubectl get service"
        }
    }
}

return this
